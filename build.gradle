buildscript {
    ext {
        springBootVersion = '2.6.6'
        spotlessVersion = '6.7.2'
    }

    repositories {
        mavenCentral()
        maven { url 'https://jitpack.io' }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:3.0"
        classpath "com.diffplug.spotless:spotless-plugin-gradle:${spotlessVersion}"
    }
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'jacoco'
apply plugin: org.sonarqube.gradle.SonarQubePlugin
apply plugin: 'com.diffplug.spotless'

group = 'com.refinitiv'
version = '0.0.1'
sourceCompatibility = sourceCompat

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}


repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
}

springBoot {
    buildInfo()
}

spotless {
    java {
        importOrder()
        removeUnusedImports()
        palantirJavaFormat()
        endWithNewline()
    }
}

jar {
    manifest {
        attributes(
                'Main-Class': 'com.refinitiv.mockdacs.Application'
        )
    }
}

dependencies {
    implementation('org.springframework.boot:spring-boot-starter-validation')
    implementation("org.springframework.boot:spring-boot-starter-actuator")
    implementation("org.springframework.boot:spring-boot-starter-data-jpa")
    implementation("org.springframework.boot:spring-boot-starter-web")
    implementation('org.springframework.cloud:spring-cloud-starter-openfeign:3.1.2')
    implementation 'com.vladmihalcea:hibernate-types-52:2.16.2'
    implementation("io.github.openfeign.form:feign-form-spring:3.8.0")
    implementation("io.github.openfeign.form:feign-form:3.8.0")
    implementation('io.github.openfeign:feign-httpclient:11.8')
    implementation 'org.json:json:20220320'

    implementation('org.springdoc:springdoc-openapi-ui:1.6.8')
    implementation 'org.mapstruct:mapstruct:1.4.2.Final'

    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.4.2.Final'


    testImplementation 'org.projectlombok:lombok:1.18.6'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.2'
    testImplementation('org.junit.jupiter:junit-jupiter-engine:5.8.2')
    testImplementation('org.junit.jupiter:junit-jupiter-params:5.8.2')
    testImplementation('org.junit.platform:junit-platform-suite:1.8.2')
    testImplementation group: 'org.mockito', name: 'mockito-junit-jupiter', version: '4.6.1'
    testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: '2.7.0'
}

jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
}

sourceSets {
    main.java.srcDirs += 'src/main'
    test.java.srcDirs += 'src/test'
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport // report is always generated after tests run
}

